#Build image 

#docker image build -t meu_apache:3.0.0 . --no-cache   

#OBS: “--no-cache" parâmetro usado para montar imagem sem cache 

#Criando container 

#docker container run -d -p 8000:80 meu_apache:3.0.0 

#OBS: Trocando o COPY pelo ADD /Adicionando USER e WORKDIR:

FROM debian 

  

RUN apt-get update && apt-get install -y apache2 && apt-get clean 

RUN chown www-data:www-data /var/lock && chown www-data:www-data /var/run/ && chown www-data:www-data /var/log/ 

ENV APACHE_LOCK_DIR="/var/lock" 

ENV APACHE_PID_FILE="/var/run/apache2.pid" 

ENV APACHE_RUN_USER="www-data" 

ENV APACHE_RUN_GROUP="www-data" 

ENV APACHE_LOG_DIR="/var/log/apache2" 

  

ADD index.html /var/www/html/                                                                                                                                            

LABEL description="Webserver" 

LABEL version="1.0.0" 

  

USER root 

                                                                                                                                                                        WORKDIR /var/www/html/                                                                                                                                                                                                                                                                                                                          VOLUME /var/www/html/ 

EXPOSE 80 

  

ENTRYPOINT ["/usr/sbin/apachectl"] 

CMD ["-D", "FOREGROUND"] 

  

VOLUME /var/www/html/ 

EXPOSE 80 

  

ENTRYPOINT ["/usr/sbin/apachectl"] 

CMD ["-D", "FOREGROUND"] 

OBS:  Com o USER www-data ele não irá ter permissão então terá que o usar o ROOT ou adicionando permissão 

RUN chown www-data:www-data /var/lock && chown www-data:www-data /var/run/ && chown www-data:www-data /var/log/ 

Mesmo com o comando passado acima ele não irá deixar bindar a porta 8080 somente o user root tem essa permisão de usar uma porta baixa  
